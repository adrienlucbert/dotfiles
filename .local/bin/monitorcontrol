#!/usr/bin/env bash

source "$HOME/.local/bin/modules/menu.sh"

config_dir="/home/alucbert/.local/share/monitorcontrol"

function choose_category {
    choices=("use preset" "arrange monitors")
    choice=$(printf '%s\n' "${choices[@]}" | open-menu)

    case $choice in
        "${choices[0]}")
          choose_preset
          ;;
        "${choices[1]}")
          arrange_monitors
          ;;
    esac
}

function arrange_monitors {
    target=$(xrandr -q | grep " connected" | cut -d' ' -f1 | open-menu)

    if [ -z "$target" ]; then
        exit
    fi

    # if target monitor is active:
    if [ "$(xrandr --listactivemonitors | grep $target | wc -l)" -eq 1 ]; then
        action=$(echo -e "move\nturn off\nrotate" | open-menu)
    else
        action=$(echo "turn on" | open-menu)
    fi

    case $action in
        "move")
            position=$(echo -e "left-of\nright-of\nabove\nbelow" | open-menu)
            reference=$(xrandr -q | grep " connected" | cut -d' ' -f1 | grep -v $target | open-menu)
            xrandr --output $target --$position $reference
            ;;
        "turn off")
            xrandr --output $target --off
            sh -c "~/.config/polybar/launch.sh"
            ;;
        "rotate")
            rotation=$(echo -e "inverted\nleft\nnormal\nright" | open-menu)
            xrandr --output $target --rotate $rotation
            ;;
        "turn on")
            xrandr --output $target --auto
            sh -c "~/.config/polybar/launch.sh"
            ;;
    esac
}

function choose_preset {
    choices=( $(ls "${config_dir}/presets") )
    choice=$(printf '%s\n' "${choices[@]}" | open-menu)

    if [ -z "$choice" ]; then
        exit
    fi
    sh -c "$(cat ${config_dir}/presets/${choice})"
    sh -c "~/.config/polybar/launch.sh"
}

choose_category
